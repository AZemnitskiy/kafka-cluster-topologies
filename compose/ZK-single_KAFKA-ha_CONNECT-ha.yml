version: '2.1'
services:

  ######################################################
  # Zookeeper nodes
  ######################################################

  zoo:
    image: zookeeper:3.4.9
    hostname: zoo
    ports:
    - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo:2888:3888
    volumes:
    - ./zoo/data:/data
    - ./zoo/datalog:/datalog

  ######################################################
  # Kafka brokers
  ######################################################

  kafka1:
    image: confluentinc/cp-kafka:5.2.0
    hostname: kafka1
    ports:
    - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${DOCKER_HOST_IP}:9092
      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
    volumes:
    - ./kafka1/data:/var/lib/kafka/data
    depends_on:
    - zoo

  kafka2:
    image: confluentinc/cp-kafka:5.2.0
    hostname: kafka2
    ports:
    - "9093:9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${DOCKER_HOST_IP}:9093
      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
      KAFKA_BROKER_ID: 2
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
    volumes:
    - ./kafka2/data:/var/lib/kafka/data
    depends_on:
    - zoo

  kafka3:
    image: confluentinc/cp-kafka:5.2.0
    hostname: kafka3
    ports:
    - "9094:9094"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${DOCKER_HOST_IP}:9094
      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
      KAFKA_BROKER_ID: 3
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
    volumes:
    - ./kafka3/data:/var/lib/kafka/data
    depends_on:
    - zoo

  ######################################################
  # Kafka connect nodes
  ######################################################

  connect1:
    image: confluentinc/cp-kafka-connect:5.2.0
    hostname: connect1
    depends_on:
    - zoo
    - kafka1
    - kafka2
    - kafka3
    - schema-registry
    ports:
    - "8082:8082"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'kafka1:9092,kafka2:9093,kafka3:9094'
      CONNECT_ZOOKEEPER_CONNECT: "zoo:2181"
      CONNECT_REST_ADVERTISED_HOST_NAME: connect1
      CONNECT_REST_PORT: 8082
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_PLUGIN_PATH: '/usr/share/java,/usr/share/confluent-hub-components'
    volumes:
    - ${HOME}/test:/tmp/test
    - ${HOME}/jars:/usr/share/java/custom-plugins

  connect2:
    image: confluentinc/cp-kafka-connect:5.2.0
    hostname: connect2
    depends_on:
    - zoo
    - kafka1
    - kafka2
    - kafka3
    - schema-registry
    ports:
    - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'kafka1:9092,kafka2:9093,kafka3:9094'
      CONNECT_ZOOKEEPER_CONNECT: "zoo:2181"
      CONNECT_REST_ADVERTISED_HOST_NAME: connect2
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_LOG4J_ROOT_LOGLEVEL: INFO
    volumes:
    - ${HOME}/test:/tmp/test
    - ${HOME}/jars:/usr/share/java/custom-plugins

  connect3:
    image: confluentinc/cp-kafka-connect:5.2.0
    hostname: connect3
    depends_on:
    - zoo
    - kafka1
    - kafka2
    - kafka3
    - schema-registry
    ports:
    - "8084:8084"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'kafka1:9092,kafka2:9093,kafka3:9094'
      CONNECT_ZOOKEEPER_CONNECT: "zoo:2181"
      CONNECT_REST_ADVERTISED_HOST_NAME: connect3
      CONNECT_REST_PORT: 8084
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_LOG4J_ROOT_LOGLEVEL: INFO
    volumes:
    - ${HOME}/test:/tmp/test
    - ${HOME}/jars:/usr/share/java/custom-plugins

  ######################################################
  # Components for managing resources
  ######################################################

  schema-registry:
    image: confluentinc/cp-schema-registry:5.2.0
    hostname: schema-registry
    depends_on:
    - zoo
    - kafka1
    - kafka2
    - kafka3
    ports:
    - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zoo:2181"
      SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_ORIGIN: '*'
      SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_METHODS: 'GET,POST,PUT,OPTIONS'

  rest-proxy:
    image: confluentinc/cp-kafka-rest:5.2.0
    hostname: rest-proxy
    depends_on:
    - zoo
    - kafka1
    - kafka2
    - kafka3
    - schema-registry
    ports:
    - "8085:8085"
    environment:
      KAFKA_REST_ZOOKEEPER_CONNECT: "zoo:2181"
      KAFKA_REST_LISTENERS: 'http://0.0.0.0:8085'
      KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      KAFKA_REST_HOST_NAME: 'rest-proxy'


  ######################################################
  # Components for browsing resources
  ######################################################

  schema-registry-ui:
    image: landoop/schema-registry-ui
    hostname: schema-registry-ui
    depends_on:
    - schema-registry
    ports:
    - "8002:8000"
    environment:
      SCHEMAREGISTRY_URL: http://${DOCKER_HOST_IP}:8081

  connect-ui:
    image: landoop/kafka-connect-ui
    depends_on:
    - connect1
    ports:
    - "8001:8000"
    environment:
      CONNECT_URL: 'http://connect1:8082'

  topics-ui:
    image: landoop/kafka-topics-ui
    depends_on:
    - rest-proxy
    ports:
    - "8003:8000"
    environment:
     KAFKA_REST_PROXY_URL: 'http://rest-proxy:8085'
     PROXY: 'true'

  kafka-manager-ui:
    image: sheepkiller/kafka-manager
    depends_on:
    - zoo
    - kafka1
    - kafka2
    - kafka3
    ports:
    - "8004:9000"
    environment:
      ZK_HOSTS: "zoo:2181"
      APPLICATION_SECRET: 'letmein'
