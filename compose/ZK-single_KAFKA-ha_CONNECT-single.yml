version: '2'
services:
  zoo:
    image: "confluentinc/cp-zookeeper:5.2.0"
    hostname: zoo
    ports:
    - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: "confluentinc/cp-kafka:5.2.0"
    hostname: kafka
    depends_on:
    - zoo
    ports:
    - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${DOCKER_HOST_IP}:9092
      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

  schema-registry:
    image: "confluentinc/cp-schema-registry:5.2.0"
    hostname: schema-registry
    depends_on:
    - zoo
    - kafka
    ports:
    - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zoo:2181'
      SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_ORIGIN: '*'
      SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_METHODS: 'GET,POST,PUT,OPTIONS'

  connect:
    image: "confluentinc/cp-kafka-connect:5.2.0"
    hostname: connect
    depends_on:
    - zoo
    - kafka
    - schema-registry
    ports:
    - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'kafka:9092'
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_ZOOKEEPER_CONNECT: 'zoo:2181'
      CONNECT_PLUGIN_PATH: '/usr/share/java,/usr/share/confluent-hub-components'
    volumes:
    - ${HOME}/test:/tmp/test
    - ${HOME}/jars:/usr/share/java/custom-plugins

  rest-proxy:
    image: confluentinc/cp-kafka-rest:5.2.0
    hostname: rest-proxy
    depends_on:
    - kafka
    - schema-registry
    ports:
    - "8084:8084"
    environment:
      KAFKA_REST_ZOOKEEPER_CONNECT: 'zoo:2181'
      KAFKA_REST_LISTENERS: 'http://0.0.0.0:8084'
      KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      KAFKA_REST_HOST_NAME: 'rest-proxy'

  connect-ui:
    image: landoop/kafka-connect-ui
    depends_on:
    - connect
    ports:
    - "8001:8000"
    environment:
      CONNECT_URL: "http://connect:8083"

  schema-registry-ui:
    image: landoop/schema-registry-ui
    depends_on:
    - kafka
    - schema-registry
    ports:
    - "8002:8000"
    environment:
      SCHEMAREGISTRY_URL: http://${DOCKER_HOST_IP}:8081

  topics-ui:
    image: landoop/kafka-topics-ui
    depends_on:
    - rest-proxy
    ports:
    - "8003:8000"
    environment:
     KAFKA_REST_PROXY_URL: http://rest-proxy:8084
     PROXY: "true"

  kafka-manager-ui:
    image: sheepkiller/kafka-manager
    depends_on:
    - zoo
    - kafka
    ports:
    - "8004:9000"
    environment:
      ZK_HOSTS: 'zoo:2181'
      APPLICATION_SECRET: 'letmein'
      KM_ARGS: -Djava.net.preferIPv4Stack=true